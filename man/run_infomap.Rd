% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modularity.R
\name{run_infomap}
\alias{run_infomap}
\title{Interface R and igraph with Infomap (external binary)}
\usage{
run_infomap(
  graph,
  infomap_path = "infomap",
  output_dir = tempdir(),
  directed = TRUE,
  two_level = TRUE,
  seed = 123,
  return_df = FALSE
)
}
\arguments{
\item{graph}{An igraph object.}

\item{infomap_path}{Path to the Infomap binary (default assumes it's in system PATH).}

\item{output_dir}{Temporary directory for Infomap results.}

\item{directed}{Boolean: Treat the network as directed (default TRUE).}

\item{two_level}{Boolean: Use two-level Infomap (default TRUE).}

\item{seed}{Numeric: Random seed for Infomap (default 123).}

\item{return_df}{Boolean: If TRUE, return a data.frame with \code{node}, \code{module}, and \code{flow}; if FALSE, return a community object (default).}
}
\value{
Either an igraph community object or a list with a data.frame and codelength.
}
\description{
This function exports an igraph network to Infomap's required format, runs Infomap,
and imports the detected communities back into R as an igraph-compatible cluster object.
It requires the installation of infomap in the system from https://www.mapequation.org/infomap/#Install
if the network has the weight attribute, it will be used as the weight of the edges.
It works for networks with more than 1 connected component, but not for networks with isolated nodes.
}
\examples{
# Example with the intermediate files in actual folder
py_infomap <- run_infomap(netData[[1]],output_dir=".", weighted = FALSE)

membership(py_infomap)
modularity(py_infomap)

}
